library(fairml)
library(readr)
library(fmf)
gc_test <- read_csv("datasets/GMSC/cs-test.csv")
gc_train <- read_csv("datasets/GMSC/cs-training.csv")
ac_test <- australian[15]
ac_train <- australian[1:14]
head(ac_train)
ac_test <- australian[16]
str(australian)
unique(ac[6])
unique(ac_train[6])
head(ac_test)
ac_test <- australian[1]
ac_train <- australian[2:15]
unique(ac_train[6])
str(ac_train)
unique(ac_train[8])
unique(ac_train[10])
quantile(ac_train[10])
quantile(ac_train[,10])
mean(ac_train[,10])
head(ac_train[,10])
head(ac_train[,10],10)
head(ac_train[,10],20)
unique(ac_train[6])
unique(ac_train[7])
unique(ac_train[6])
sort(unique(ac_train[6]))
sort(unique(ac_train[,6]))
aussie <- read_csv("dataset/UCI_Credit_Card.csv")
aussie <- read_csv("datasets/UCI_Credit_Card.csv")
aussie <- read_csv("datasets/UCI_Credit_Card.csv")
library(readr)
aussie <- read_csv("datasets/UCI_Credit_Card.csv")
library(fmf)
set.seed(69)
ac_train <- sample(australia, prob = 0.7)
ac_test <- sample(australia, prob=0.3)
ac_train <- sample(australian, prob = 0.7)
ac_test <- sample(australian, prob=0.3)
ausLen <- length(australian)
ausLen
ausLen <- nrow(australian)
ausLen
ausSplit <- sample(seq_along(ausLen), size = 0.75 * ausLen)
ausSplit <- sample(seq_len(ausLen), size = 0.75 * ausLen)
ausSplit
ac_train <- australian[ausSplit, ]
ac_test <- australian[-ausSplit, ]
nrow(ac_test_
nrow(ac_test)
0.75*690
690-517.5
nrow(ac_train)
ac_y_train <- ac_train[, 1]
ac_X_train <- ac_train[, -1]
head(ac_y_train)
ac_y_train <- ac_test[, -1]
nrow(ac_y_train)
head(ac_y_train)
reset_index(ac_y_test)
reset_index(ac_y_train)
reset_index(ac_X_train)
reset_index(ac_X_test)
reset_index <- function(df) {
reset_index <- function(df) {
  n <- nrow(df)
  rownames(df) <- 1:n
}
reset_index(ac_y_test)
reset_index(ac_y_train)
reset_index(ac_X_train)
reset_index(ac_X_test)
ac_y_train <- ac_train[, 1]
ac_X_train <- ac_train[, -1]
ac_y_test <- ac_test[, 1]
ac_y_test <- ac_test[, -1]
reset_index(ac_y_test)
reset_index(ac_y_train)
reset_index(ac_X_train)
reset_index(ac_X_test)
reset_index <- function(df) {
  df <- get(df)
  n <- nrow(df)
  rownames(df) <- 1:n
}
reset_index("ac_y_test")
head(ac_y_test)
reset_index <- function(df) {
  df <- get(paste0(df))
  n <- nrow(df)
  rownames(df) <- 1:n
}
reset_index("ac_y_test")
head(ac_y_test)
reset_index <- function(df) {
  df <- get(paste0(df))
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index("ac_y_test")
head(ac_y_test)
rownames(ac_y_test) <- 1:173
head(ac_y_test)
reset_index(ac_y_train)
reset_index <- function(df) {
  df <- df
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index(ac_y_train)
get("ac_y_train")
reset_index <- function(df) {
  df <- !!rlang::sym(df)
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index(ac_y_train)
reset_index("ac_y_train")
reset_index <- function(df) {
  print(df)
  df <- !!rlang::sym(df)
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index("ac_y_train")
!!rlang::sym("ac_y_train")
rlang::sym("ac_y_train")
rlang::sym("ac_y_train"reset_index <- function(df) {
  print(df)
  df <- rlang::sym(df)
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
})
reset_index <- function(df) {
  print(df)
  df <- rlang::sym(df)
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index("ac_y_train")
reset_index("ac_y_train")reset_index <- function(df) {
  print(df)
  df <- !rlang::sym(df)
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index <- function(df) {
  print(df)
  df <- !rlang::sym(df)
  n <- nrow(df)
  print(n)
  rownames(df) <- 1:n
}
reset_index("ac_y_train")
reset_index <- function(df) {
  head(df)
}
reset_index(ac_y_train)
reset_index <- function(df) {
  rownames(df)
}
reset_index(ac_y_train)
rownames(df)
rownames(ac_y_train)
reset_index <- function(df) {
  rownames(df) <- NULL
}
reset_index(ac_y_test)
head(ac_y_test)
reset_index(ac_X_train)
reset_index(ac_X_test)
ac_train <- australian[ausSplit, ]
ac_test <- australian[-ausSplit, ]
ac_y_train <- ac_train[, 1]
ac_X_train <- ac_train[, -1]
ac_X_test <- ac_test[, 1]
ac_y_test <- ac_test[, -1]
reset_index(ac_y_test)
reset_index(ac_y_train)
reset_index(ac_X_train)
reset_index(ac_X_test)
head(ac_X_test)
ac_y_test <- ac_test[, 1]
ac_X_test <- ac_test[, -1]
head(ac_X_test)
reset_index(ac_y_test)
reset_index(ac_y_train)
reset_index(ac_X_train)
reset_index(ac_X_test)
head(ac_X_test)
rownames(ac_X_test)
reset_index(ac_X_test)
rownames(ac_X_test)
reset_index <- function(df) {
  head(df)
  rownames(df) <- NULL
}
rownames(ac_X_test)
reset_index(ac_X_test)
rownames(ac_X_test)
head(df)
head(dataframe)
reset_index <- function(dataframe) {
  head(dataframe)
  rownames(dataframe) <- NULL
}
reset_index(ac_X_test)
head(dataframe)
head(ac_X_test)
reset_index <- function(dataframe) {
  rownames(dataframe) <- NULL
  return(dataframe)
}
reset_index(ac_X_test)
head(ac_X_test)
df_names <- c("ac_X_train", "ac_y_train", "ac_y_test", "ac_X_test")
for (name in df_names) {
  rownames(get(name)) <- NULL
}
for (name in df_names) {
  print(name)
  # rownames(get(name)) <- NULL
}
rownames(get("ac_X_train"))
rownames(get("ac_X_train")) <- NULL
rownames(rlang::sym("ac_X_train")) <- NULL
for (name in df_names) {
  df <- get(name)
  rownames(df) <- NULL
  assign(name, df)
}
rownaems(ac_X_train)
rownames(ac_X_train)
ac_X_test <- ac_test[, -1]
rownames(ac_X_test)
list_of_dfs <- map(ac_X_test, ~ {rownames(.x) <- NULL; .x})
library(purrr)
list_of_dfs <- map(ac_X_test, ~ {rownames(.x) <- NULL; .x})
list_of_dfs
ausSplit <- sample(c(TRUE, FALSE), nrow(australian), replace = TRUE, prob = c(0.75, 0.25))
ac_train <- australian[ausSplit, ]
ac_test <- australian[!ausSplit, ]
ac_y_train <- ac_train[, 1]
ac_X_train <- ac_train[, -1]
ac_y_test <- ac_test[, 1]
ac_X_test <- ac_test[, -1]
df_names <- c("ac_X_train", "ac_y_train", "ac_y_test", "ac_X_test")
for (name in df_names) {
  df <- get(name)
  rownames(df) <- NULL
  assign(name, df)
}
head(ac_y_test)
head(ac_X_test)
head(gc_test)
data.table()
install.packages("data.table")
library(data.table)
gc_train <- fread("datasets/GMSC/cs-training.csv", drop = "")
gc_test <- fread("datasets/GMSC/cs-test.csv", drop = "")
names(gc_test)
gc_train <- fread("datasets/GMSC/cs-training.csv", drop = "V1")
gc_test <- fread("datasets/GMSC/cs-test.csv", drop = "V1")
names(gc_test)
head(gc_test)
gcSplit <- sample(c(TRUE, FALSE), nrow(gc), replace = TRUE, prob = c(0.7, 0.3))
gc_train <- gc[gcSplit, ]
gc_test <- gc[!gcSplit, ]
nrow(gc)
head(gc)
gc <- fread("datasets/GMSC/cs-training.csv", drop = "V1") # cs-test not used as only kaggle has the true probabilities
gc
head(gc)
gcSplit <- sample(c(TRUE, FALSE), nrow(gc), replace = TRUE, prob = c(0.7, 0.3))
gc_train <- gc[gcSplit, ]
gc_test <- gc[!gcSplit, ]
nrow(gc_test)
nrow(gc_test)+nrow(gc_train)
tc <- fread("datasets/UCI_Credit_Card.csv")
head(tc)
tc <- fread("datasets/UCI_Credit_Card.csv", drop = "ID")
tcSplit <- sample(c(TRUE, FALSE), nrow(tc), replace = TRUE, prob = c(0.7, 0.3))
tc_train <- tc[tcSplit, ]
tc_test <- tc[tcSplit, ]
head(tc_test)
rownames(tc_train)
rownames(tc_test)
tc_test <- tc[!tcSplit, ]
rownames(tc_test)
ausSplit <- sample(c(TRUE, FALSE), nrow(australian), replace = TRUE, prob = c(0.75, 0.25))
ac_train <- australian[ausSplit, ]
ac_test <- australian[!ausSplit, ]
head(ac_test)
australian <- as.data.table(australian)
ausSplit <- sample(c(TRUE, FALSE), nrow(australian), replace = TRUE, prob = c(0.75, 0.25))
ac_train <- australian[ausSplit, ]
ac_test <- australian[!ausSplit, ]
head(ac_test)
ac_y_train <- ac_train[, 1]
ac_X_train <- ac_train[, -1]
ac_y_test <- ac_test[, 1]
ac_X_test <- ac_test[, -1]
head(ac_y_train)
head(tc)
ncol(tc)
tc_y_train <- tc_train[, 24]
tc_X_train <- tc_train[, -24]
tc_y_test  <- tc_test[, 24]
tc_X_test  <- tc_test[, -24]
head(tc_y_train)
head(tc_y_test)
head(tc_X_test)
ncol(gc)
gc
gc <-  as.data.table(german.credit)
gcSplit <- sample(c(TRUE, FALSE), nrow(gc), replace = TRUE, prob = c(0.7, 0.3))
gc_train <- gc[gcSplit, ]
gc_test  <- gc[!gcSplit, ]
library(fairml)
gc <-  as.data.table(german.credit)
gcSplit <- sample(c(TRUE, FALSE), nrow(gc), replace = TRUE, prob = c(0.7, 0.3))
gc_train <- gc[gcSplit, ]
gc_test  <- gc[!gcSplit, ]
gc
ncol(gc)
gc_y_train <- gc_train[, 20]
gc_X_train <- gc_train[, -20]
gc_y_test  <- gc_test[, 20]
gc_X_test  <- gc_test[, -20]
gc_y_test
sorted
sort
set.seed(69)
gmsc <- fread("datasets/GMSC/cs-training.csv", drop = "V1") # cs-test not used as only kaggle has the true probabilities
gmscSplit <- sample(c(TRUE, FALSE), nrow(gmsc), replace = TRUE, prob = c(0.7, 0.3))
gmsc_train <- gmsc[gmscSplit, ]
gmsc_test <- gmsc[!gmscSplit, ]
gmsc_y_train <- gmsc_train[, 1]
gmsc_X_train <- gmsc_train[, -1]
gmsc_y_test <- gmsc_test[, 1]
gmsc_X_test <- gmsc_test[, -1]
gmsc_y_test
gmsc_y_train
gc_y_test
